Bob, the builder has been assigned a task to transfer heavy cargo consisting of cement and concrete from one location to another. He has to use chains to pull the cargo, but all chains are not strong enough to pull the cargo.

Each chain is made up of a string of ‘-‘ or ‘*’ and any chain strong enough to pull the cargo has the following extra features:

It should have at-least one element.

It should always begin with a ‘*’.

After first ‘*’, the chain may or may not be extended.

A chain can be extended only by adding ‘-’ at any point of the chain after the first ‘’.

Given a chain, check if it is strong enough to pull the cargo or not.

Constraints

1<=t<=1000

1<=len<=100, where len is the length of the chain


Input Format

The first line of input contains t, which gives the number of test cases followed by t lines. 
Each of the following t lines contains a string of made of ‘*’ and ‘-‘ that represent the chain.

Output Format

The output contains t lines and ith line of the output contains “Strong” if the ith chain is strong enough to pull the cargo and “Not Strong” otherwise. 
Note that a null string is considered to be a “Not Strong” string. (Don’t output the quotes!)

Sample Input

4
*-*-*-*-*-*
*---*--***
*--**
*

Sample Output

Strong
Not Strong
Strong
Strong

Explanation

The first test case is a strong chain. It begins with * and -* is continuously added to the end of this.

For the second test case, in the beginning there is a *, but following that, there is not way to add -* at different points such that it forms a strong chain.

For the third test case, in the beginning there is a * and following that you add -* at the end. You have the chain *-* now. Then add -* after the

- to form the chain *--** . This is one way to make a strong chain.

The fourth test case contains only one * This is clearly strong.


Environment
Read from STDIN and write to STDOUT. 